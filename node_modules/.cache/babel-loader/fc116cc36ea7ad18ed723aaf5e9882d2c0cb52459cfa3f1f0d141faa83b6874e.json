{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FeNis\\\\my-interactive-website\\\\src\\\\pages\\\\Support\\\\Service\\\\OptionCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './OptionCard.css'; // Import your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionCard = ({\n  option,\n  onSelect,\n  isSelected\n}) => {\n  const handleClick = () => {\n    onSelect(option); // Call onSelect function with the selected option\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `option-card ${isSelected ? 'selected' : ''}`,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: option.image,\n      alt: option.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: option.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = OptionCard;\nOptionCard.propTypes = {\n  option: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n  }).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired\n};\nexport default OptionCard;\nvar _c;\n$RefreshReg$(_c, \"OptionCard\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","OptionCard","option","onSelect","isSelected","handleClick","className","onClick","children","src","image","alt","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","shape","string","isRequired","func","bool","$RefreshReg$"],"sources":["C:/Users/FeNis/my-interactive-website/src/pages/Support/Service/OptionCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './OptionCard.css'; // Import your CSS for styling\n\nconst OptionCard = ({ option, onSelect, isSelected }) => {\n  const handleClick = () => {\n    onSelect(option); // Call onSelect function with the selected option\n  };\n\n  return (\n    <div\n      className={`option-card ${isSelected ? 'selected' : ''}`}\n      onClick={handleClick}\n    >\n      <img src={option.image} alt={option.text} />\n      <p>{option.text}</p>\n    </div>\n  );\n};\n\nOptionCard.propTypes = {\n  option: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n  }).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n};\n\nexport default OptionCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EACvD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACEF,OAAA;IACEM,SAAS,EAAE,eAAeF,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IACzDG,OAAO,EAAEF,WAAY;IAAAG,QAAA,gBAErBR,OAAA;MAAKS,GAAG,EAAEP,MAAM,CAACQ,KAAM;MAACC,GAAG,EAAET,MAAM,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5ChB,OAAA;MAAAQ,QAAA,EAAIN,MAAM,CAACU;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACC,EAAA,GAdIhB,UAAU;AAgBhBA,UAAU,CAACiB,SAAS,GAAG;EACrBhB,MAAM,EAAEJ,SAAS,CAACqB,KAAK,CAAC;IACtBP,IAAI,EAAEd,SAAS,CAACsB,MAAM,CAACC,UAAU;IACjCX,KAAK,EAAEZ,SAAS,CAACsB,MAAM,CAACC;EAC1B,CAAC,CAAC,CAACA,UAAU;EACblB,QAAQ,EAAEL,SAAS,CAACwB,IAAI,CAACD,UAAU;EACnCjB,UAAU,EAAEN,SAAS,CAACyB,IAAI,CAACF;AAC7B,CAAC;AAED,eAAepB,UAAU;AAAC,IAAAgB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}